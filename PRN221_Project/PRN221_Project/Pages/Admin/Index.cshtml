@page
@model PRN221_Project.Pages.Admin.IndexModel
@{
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet">
<link rel="stylesheet" href="~/css/rootcss.css" />

<style>
    .chart-container {
        display: flex;
        flex-direction: row;
        align-items: center;
    }

    .chart {
        max-width: 200px;
        max-height: 200px;
        margin-right: 20px;
    }

    .legend-container {
        display: flex;
        flex-direction: column;
    }

    .legend-item {
        display: flex;
        align-items: center;
        margin-bottom: 5px;
    }

    .legend-color {
        width: 20px;
        height: 20px;
        margin-right: 5px;
    }

    /* Thêm box màu trắng viền nhạt */
    .chart-wrapper {
        background-color: #fff;
        border: 1px solid #e9e9e9;
        padding: 20px;
        margin-bottom: 20px;
    }
</style>

<div class="d-flex">
    <div class="container col-2">

        <div class="card">
            <div class="card-body">
                <a class="card-title text-decoration-none" href="/admin/invoices"><i class="bi bi-card-list fs-5 text-primary"></i>   Ivoice</a>
                <p class="card-text"></p>
            </div>
            <div class="card-body">
                <a class="card-title text-decoration-none" href="/admin/products"><i class="bi bi-bag text-primary fs-5"></i>   Products </a>
                <p class="card-text"></p>

            </div>
            <div class="card-body">
                <a class="card-title text-decoration-none" href="/admin/categories"><i class="bi bi-bookmarks text-primary fs-5"></i>   Categories</a>
                <p class="card-text"></p>
            </div>
            <div class="card-body">
                <a class="card-title text-decoration-none" href="/admin/customers"><i class="bi bi-person text-primary fs-5"></i>   Customers</a>
                <p class="card-text"></p>
            </div>
            <div class="card-body">
                <a class="card-title text-decoration-none" href="/admin/employees"><i class="bi bi-person-check text-primary fs-5"></i>   Employees</a>
                <p class="card-text"></p>
            </div>
            <div class="card-body">
                <a class="card-title text-decoration-none" href="/admin/suppliers"><i class="bi bi-plus-circle text-primary"></i>   Suppliers</a>
                <p class="card-text"></p>
            </div>
            <div class="card-body">
                <a class="card-title text-decoration-none" href="/admin/ReceiveProducts"><i class="bi-archive text-primary"></i>   Receive</a>
                <p class="card-text"></p>
            </div>
           

        </div>
    </div>
    <div class="container col-10 ">

        <div class="row">
            <div class="col-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Today Revenue</h5>
                        <p class="card-text">@Model.dayRevenue(DateTime.Now.Date)</p>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Product Sold</h5>
                        <p class="card-text">Today: @Model.TodayProductSold -Total: @Model.TotalProductSold</p>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Customers</h5>
                        <p class="card-text">@Model.customers.Count</p>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <!-- Thêm class "chart-wrapper" cho các biểu đồ -->
        <div class="row">
            <div class="col-6">
                <div class="chart-wrapper">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
            <div class="col-6">
                <div class="chart-wrapper">
                    <canvas id="monthlyChart"></canvas>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-3">
                <div class="chart-wrapper">
                    <canvas id="categoryChart"></canvas>
                    <div id="categoryLegend"></div>
                </div>
            </div>
            <div class="col-8">
                <table class="table">
                    <thead>

                        <tr>
                            <th>Invoice ID</th>
                            <th>Customer</th>
                            <th>Order Date</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in @Model.recentInvoices){
                            <tr>
                                <td>@item.InvoiceId</td>
                                @if(item.Customer != null)
                                {
                                    <td>@item.Customer.CustomerName</td>
                                }
                                else{

                                    <td></td>
                                    }
                                    <td>@item.DateRecorded.Date</td>
                                <td>@item.TotalAmount</td>
                            </tr>                          
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Revenue Chart
        var revenueCtx = document
            .getElementById("revenueChart")
            .getContext("2d");
        var revenueChart = new Chart(revenueCtx, {
            type: "line",
            data: {
                labels: [

                    "Day @DateTime.Now.AddDays(-15).Day",
                    "Day @DateTime.Now.AddDays(-14).Day ",
                    "Day @DateTime.Now.AddDays(-13).Day ",
                    "Day @DateTime.Now.AddDays(-12).Day",
                    "Day @DateTime.Now.AddDays(-11).Day ",
                    "Day @DateTime.Now.AddDays(-10).Day",
                    "Day @DateTime.Now.AddDays(-9).Day ",
                    "Day @DateTime.Now.AddDays(-8).Day ",
                    "Day @DateTime.Now.AddDays(-7).Day ",
                    "Day @DateTime.Now.AddDays(-6).Day",
                    "Day @DateTime.Now.AddDays(-5).Day ",
                    "Day @DateTime.Now.AddDays(-4).Day ",
                    "Day @DateTime.Now.AddDays(-3).Day ",
                    "Day @DateTime.Now.AddDays(-2).Day ",
                    "Day @DateTime.Now.AddDays(-1).Day ",
                    "Day @DateTime.Now.Day",
                ],
                datasets: [
                    {
                        label: "Revenue Day",
                        data: [
    @Model.dayRevenue(DateTime.Now.AddDays(-15).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-14).Date) ,
    @Model.dayRevenue(DateTime.Now.AddDays(-13).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-12).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-11).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-10).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-9).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-8).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-7).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-6).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-5).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-4).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-3).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-2).Date),
    @Model.dayRevenue(DateTime.Now.AddDays(-1).Date),
    @Model.dayRevenue(DateTime.Now.Date),
                        ],
                        backgroundColor: "rgba(0, 123, 255, 0.5)",
                        borderColor: "rgba(0, 123, 255, 1)",
                        borderWidth: 1,
                    },
                ],
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                    },
                },
            },
        });

        // Monthly Chart
        var monthlyCtx = document
            .getElementById("monthlyChart")
            .getContext("2d");
        var monthlyChart = new Chart(monthlyCtx, {
            type: "bar",
            data: {
                labels: ["@DateTime.Now.AddMonths(-5).Month", "@DateTime.Now.AddMonths(-4).Month", "@DateTime.Now.AddMonths(-3).Month", "@DateTime.Now.AddMonths(-2).Month", "@DateTime.Now.AddMonths(-1).Month", "@DateTime.Now.Month"],
                datasets: [
                    {
                        label: "Revenue Month",
                        data: [

    @Model.monthRevenue(DateTime.Now.AddMonths(-5)),
    @Model.monthRevenue(DateTime.Now.AddMonths(-4)),
    @Model.monthRevenue(DateTime.Now.AddMonths(-3)),
    @Model.monthRevenue(DateTime.Now.AddMonths(-2)),
    @Model.monthRevenue(DateTime.Now.AddMonths(-1)),
    @Model.monthRevenue(DateTime.Now),

                        ],
                        backgroundColor: [
                            "rgba(255, 99, 132, 0.5)",
                            "rgba(54, 162, 235, 0.5)",
                            "rgba(255, 206, 86, 0.5)",
                            "rgba(75, 192, 192, 0.5)",
                            "rgba(153, 102, 255, 0.5)",
                            "rgba(255, 159, 64, 0.5)",
                        ],
                        borderColor: [
                            "rgba(255, 99, 132, 1)",
                            "rgba(54, 162, 235, 1)",
                            "rgba(255, 206, 86, 1)",
                            "rgba(75, 192, 192, 1)",
                            "rgba(153, 102, 255, 1)",
                            "rgba(255, 159, 64, 1)",
                        ],
                        borderWidth: 1,
                    },
                ],
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                    },
                },
            },
        });

        // Category Chart

        var categoryCtx = document
            .getElementById("categoryChart")
            .getContext("2d");
        var categoryChart = new Chart(categoryCtx, {
            type: "doughnut",
            data: {
                labels: ["@Model.BestSellingCategory", "@Model.SecondBestSellingCategory", "@Model.ThirdBestSellingCategory", "Other"],
                datasets: [
                    {
                        label: "Product Sold",
                        data: [@Model.BestProductsSold,@Model.SecondProductsSold,@Model.ThirdProductsSold, @Model.OtherProductSold],
                        backgroundColor: ["#007bff", "#dc3545", "#ffc107", "#28a745"],
                    },
                ],
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false,
                    },
                },
            },
        });

        // Category Legend
        var categoryLegend = document.getElementById("categoryLegend");
        var legendHTML = "";
        var categoryLabels = categoryChart.data.labels;
        var categoryColors = categoryChart.data.datasets[0].backgroundColor;
        for (var i = 0; i < categoryLabels.length; i++) {
            legendHTML += '<div class="legend-item">';
            legendHTML +=
                '<div class="legend-color" style="background-color:' +
                categoryColors[i] +
                '"></div>';
            legendHTML += "<div>" + categoryLabels[i] + "</div>";
            legendHTML += "</div>";
        }
        categoryLegend.innerHTML = legendHTML;
    });
</script>


<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
