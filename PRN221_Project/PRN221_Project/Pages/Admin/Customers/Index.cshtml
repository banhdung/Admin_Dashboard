@page
@model PRN221_Project.Pages.Customers.IndexModel

@{
    ViewData["Title"] = "Customers";
}
<link rel="stylesheet" href="~/css/rootcss.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet">
<h1>Customers</h1>


<input class=" form-control-sm border border-primary rounded-pill" type="text" id="searchTerm" placeholder="Search..." /><p>
  
</p>
<a href="/admin">Back to overview</a>
<table class="table" id="data-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].CustomerCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].CustomerName)
                <a id="sortButton1"><i class="bi bi-arrow-down-up"></i></a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].Contact)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].Point)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Customer) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerName)
                  
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contact)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Point)
            </td>
            <td>
                    <a class="text-decoration-none" asp-page="./Edit" asp-route-id="@item.CustomerId"> <i class="bi bi-pencil-fill"></i> Edit</a> |
                    <a class="text-decoration-none" asp-page="./Details" asp-route-id="@item.CustomerId"> Details <i class="bi bi-list"></i></a>

            </td>
        </tr>
}
    </tbody>
</table>

<script>
    function sortTable(tableId, columnIndex, sortId) {
        const sortButton = document.getElementById(sortId);
        let ascending = true;
        sortButton.addEventListener("click", () => {
            const icon = sortButton.querySelector("i");
            const table = document.getElementById(tableId);
            const tbody = table.querySelector("tbody");
            const rows = Array.from(tbody.querySelectorAll("tr"));
            if (ascending) {
                icon.classList.remove("bi-arrow-down-up");
                icon.classList.add("bi-arrow-up");
                rows.sort((a, b) => {
                    const nameA = a.cells[columnIndex].textContent;
                    const nameB = b.cells[columnIndex].textContent;
                    return nameA.localeCompare(nameB);
                });
            } else {
                icon.classList.remove("bi-arrow-up");
                icon.classList.add("bi-arrow-down");
                rows.sort((a, b) => {
                    const nameA = a.cells[columnIndex].textContent;
                    const nameB = b.cells[columnIndex].textContent;
                    return nameB.localeCompare(nameA);
                });
            }
            while (tbody.firstChild) {
                tbody.removeChild(tbody.firstChild);
            }
            rows.forEach((row) => {
                tbody.appendChild(row);
            });
            ascending = !ascending;
        });
    }
    sortTable("data-table", 0, "sortButton1");

</script>


